import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'cart_item.dart'; // Assuming you have CartItem defined in cart_item.dart

class CartPage extends StatelessWidget {
  final List<CartItem> cartItems;
  final String id;

  CartPage({super.key, required this.cartItems, required this.id});

  // Method to handle adding items to the cart
  Future<void> addToCart(BuildContext context, String custId, CartItem item) async {
    final String url = 'https://swati.amisys.in/dashboard_api/cart.php'; // Update with your PHP endpoint

    final response = await http.post(
      Uri.parse(url),
      body: {
        'id': '1', // Assuming a quantity of 1 for simplicity
        'name': item.name,
        'company': item.company,
        'openingstocks': item.openingStock, // Add other extra fields as needed
        'rate': '',
        //'name': item.rate.toString(),
      },
    );

    if (response.statusCode == 200) {
      final responseData = jsonDecode(response.body);
      if (responseData['status'] == 'success') {
        // Show a success message
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text(responseData['message'])),
        );
      } else {
        // Handle error message
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error: ${responseData['message']}')),
        );
      }
    } else {
      // Handle HTTP error
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('HTTP error: ${response.statusCode}')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('My Cart'),
        backgroundColor: Colors.orange,
      ),
      body: cartItems.isEmpty
          ? const Center(child: Text('No items in the cart!'))
          : ListView.builder(
            itemCount: cartItems.length,
            itemBuilder: (context, index) {
              final cartItem = cartItems[index];
              return Card(
                margin: const EdgeInsets.all(10),
                elevation: 4,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10),
            ),
                child: ListTile(
                  leading: Image.network(
                    cartItem.imageUrl.isNotEmpty
                    ? cartItem.imageUrl
                    : 'https://cdn.pixabay.com/photo/2017/03/19/20/19/ball-2157465_640.png', // Fallback image
                        height: 50,
                        width: 50,
                        fit: BoxFit.cover,
                        errorBuilder: (context, error, stackTrace) {
                          return const Icon(Icons.image_not_supported);
                        },
                      ),
                      title: Text(
                        cartItem.name,
                        style: const TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 16,
                        ),
                      ),
                      subtitle: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          const SizedBox(height: 5),
                          Text(
                            'Company: ${cartItem.company}',
                            style: const TextStyle(fontSize: 14),
                          ),
                          const SizedBox(height: 5),
                          Text(
                            'Stock: ${cartItem.openingStock}',
                            style: const TextStyle(fontSize: 14),
                          ),
                          const SizedBox(height: 5),
                          Text(
                            'Stock: ${cartItem.rate }',
                            style: const TextStyle(fontSize: 14),
                          ),
                        ],
                      ),
                      trailing: IconButton(
                        icon: const Icon(Icons.add_shopping_cart),
                        onPressed: () {
                          addToCart(context, 'your_customer_id_here', cartItem); // Pass context here
                },
              ),
            ),
          );
        },
      ),
    );
  }
}
